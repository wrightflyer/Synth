#include "Clarinet_samples.h"

static const PROGMEM uint32_t sample_0_Clarinet_SYNCL55[128] = {
0x004e0000,0x110a0901,0x13701640,0xefc2048a,0xd6a5ddf6,0xe311da5e,0xf443ec39,0x047dfccd,
0x05b30878,0xe3cff98e,0xb3c9cb28,0x9655a1de,0x8fa88fb9,0x9bd39505,0xa989a38e,0xabbcac8d,
0xa254a72e,0x96fe9dc9,0x8ba78fef,0x8ca78a04,0xb1d998c8,0xebcad247,0x0ceefb0b,0x45c426c1,
0x6c905f11,0x6a5d6f45,0x586e6119,0x423250fa,0x14112c19,0xf3b3014a,0xe47de9a5,0xece3e4f0,
0x11dafbf8,0x371e292c,0x2c7d36dd,0x156b2038,0xffdc0970,0x033cfd26,0x26381116,0x4f353d09,
0x67585ca2,0x713c6e24,0x6f887161,0x70c76e92,0x7b4475ac,0x793e7c27,0x7096764e,0x51f36540,
0x2ba03c94,0x07e41b91,0xdad0f12f,0xb2e2c525,0xa11ca69c,0x9e9c9f52,0xad01a1d3,0xd86ac05c,
0xff53ef4b,0x10f9092c,0x136a163d,0xefbe048f,0xd6a4ddfa,0xe30fda5f,0xf442ec3a,0x047cfccf,
0x05b20879,0xe3cff97e,0xb3c8cb28,0x9653a1de,0x8fa88fb9,0x9bd19506,0xa989a38e,0xabbcac8d,
0xa253a6cd,0x96fd9dcb,0x8ba78fef,0x8ca78a04,0xb1d998c8,0xebcad247,0x0ceffb0b,0x45c52720,
0x6c8f5f10,0x6a5d6f46,0x586d611a,0x423250f9,0x14112c19,0xf3b2014b,0xe47de98b,0xece3e4f0,
0x11dafbf7,0x371d292c,0x2c7b36de,0x156b2038,0xffdc096f,0x033cfd22,0x26391116,0x4f343d09,
0x67585ca2,0x713c6e25,0x6f897161,0x70c76e94,0x7b437602,0x793d7c27,0x7096764e,0x51f36540,
0x2ba13c95,0x07e41b92,0xdad0f12e,0xb2e2c529,0xa11ca69d,0x9e9c9f52,0xad01a1d3,0xd86ac05d,
0xff53ef4c,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_1_Clarinet_SYNCL64[128] = {
0x018b0000,0xea1ff1f9,0x0d91fa3b,0x39062872,0x366938d6,0x4bdd3c15,0x64045dc6,0x5e4162f9,
0x4ab75785,0x1a463541,0xda2ffa1d,0xc7abc96e,0xdd1acefc,0xfd3aef2a,0xfa9bfefc,0xf638f909,
0xee95ef59,0xf653f489,0xfadbf5d9,0xf7b3fd41,0xe4fcee64,0xd50fdc01,0xbdc6cadb,0x9edab116,
0x83d98bfa,0x99df8958,0xdc40b4b0,0x225a065c,0x31532c0a,0x377c38a7,0x1f512bcc,0xf8800feb,
0xf585ed95,0x151e032c,0x21632384,0xef9e0a75,0xfab7eb64,0x2a520fb8,0x38ae39d9,0x3d9836c9,
0x5fad4f30,0x6231643e,0x55435d09,0x2e96462a,0xf01911fa,0xc7a3d312,0xd345c939,0xf59ee459,
0xfd3dff60,0xf87df986,0xedb9f31f,0xf651f148,0xf806f595,0xfafffd21,0xe8ebf286,0xd7a8df6a,
0xc254cf60,0xa58eb5cf,0x84d29135,0x94dd868f,0xd3a8ad96,0x1f84ffc4,0x307d2b76,0x380f3833,
0x1fe62bd2,0xf91a10c4,0xf555ed94,0x1508030f,0x215f2386,0x00000a75,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_2_Clarinet_SYNCL70[128] = {
0x0cf90000,0x3165240a,0x2b983284,0x1df122d0,0x20a61ec3,0x2626217e,0x410b3135,0x65215231,
0x7c1c7525,0x633576ac,0x268c46eb,0xf4290949,0xd528e250,0xc79ecddf,0xcf7bc64c,0xec29dd81,
0xef77f5a7,0xc273db24,0x9d0aacee,0x99bf96d0,0xac37a161,0xcc0cbc29,0xdf67d69f,0xf8e4eaad,
0x23c10d80,0x325c3198,0x22b42bb8,0x1eac1e09,0x216b20b9,0x31252637,0x5222411a,0x7519652e,
0x76a17c27,0x46e16340,0x093e2698,0xe247f433,0xcdd6d531,0xc643c7a6,0xdd78cf83,0xf59fec32,
0xdb1cef7f,0xace7c27a,0x96c99d10,0xa15b99c5,0xbc22ac3e,0xd698cc12,0xeaa9df6d,0x0d80f91b,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_3_Clarinet_SYNCL75[128] = {
0x14c10000,0x564b3ede,0x74976875,0x7b637c27,0x668e7210,0x6c1465fa,0x77797345,0x50c76dc0,
0x056a2dab,0xb0c8d839,0x87049626,0x8e4684ec,0xb47ca07f,0xc414c36d,0xac8cba2f,0x95179f2e,
0x9b09917d,0xe8e8b550,0x3deb1695,0x67ff56eb,0x7bd974f5,0x71d77ba6,0x65cb66c2,0x731d6c3f,
0x6d9e779c,0x2d8e50e6,0xd8200586,0x960eb0e1,0x84d6871a,0xa06c8e59,0xc35bb48e,0xba1ec425,
0x9f1eac9e,0x916f9526,0xb5429b17,0x1695e1c6,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_4_Clarinet_SYNCL87[128] = {
0x03d50000,0x8f03e530,0xab0383d9,0xe20ce01d,0x8870b080,0xeb0495b5,0x7998594f,0x51736851,
0x5bb547fc,0x421b739f,0x90f9e16d,0xabef8472,0xe189df69,0x88d4b00b,0xeb4f96ae,0x74d1590d,
0x51a1681c,0x5bde4236,0x4276737b,0x9117e14f,0xac06850d,0xe2e5df51,0x88e7aff5,0xeb619571,
0x770f58fa,0x51b1680d,0x5bec4389,0x41c2736d,0x0000e14f,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_5_Clarinet_S_SAXA8[256] = {
0x000c000c,0x0005fffe,0x00340024,0x002b002d,0x00200035,0xffbfffe8,0xfff4ffcc,0x0027000f,
0x00420041,0xffff001f,0x00210005,0x0054003a,0x0086007b,0x002b005d,0x00310021,0x00090024,
0x003e0010,0x00680063,0x00530060,0x00160038,0x0016000b,0x00370029,0x00420042,0x002a0034,
0x003a0034,0xfffe001c,0x0046000e,0x00430061,0x00010013,0x00010002,0x0010ffff,0x00570034,
0x00940074,0x00f200c6,0x00a400ed,0xfff50038,0x000cfff2,0x003e0023,0x00b90075,0x00bc00d9,
0x00100068,0x003bfff8,0x00d200a7,0x00320097,0xffb1ffe8,0xff7bff81,0xffdcffae,0xffdaffd7,
0x009f002e,0x007c00bc,0x0054004c,0xffbf003e,0xfeaeff10,0xff79fedb,0x009e002a,0x00b200ba,
0x006e00a8,0xfed2ffbe,0xfeb1fe54,0x00c1ffad,0x01f60197,0x00a801a8,0xfe3dff57,0xfdabfda8,
0xff95fe51,0x02c60138,0x03b003be,0x000b0263,0xfb4cfd5f,0xfbb3fa9b,0x0260fe85,0x07da05f5,
0x03fc072e,0xf9ccff17,0xf49ff5c4,0xfd84f754,0x0be90549,0x0d2d0ef0,0xfdfd06fa,0xeddcf4af,
0xf08fec08,0x07c3face,0x17b212d0,0x0b3914ac,0xf28bfeb0,0xe7bce9eb,0xfb23eddb,0x16d10ad6,
0x15f91acb,0xfb720a69,0xe24aeccb,0xe76edfa9,0x0e5df8cd,0x25e31fb3,0x0fc71f5f,0xea02fc79,
0xd828dc6c,0xf559e0af,0x25350f97,0x260c2d7e,0xfba11317,0xd47be554,0xd84ace52,0x148cf2af,
0x37ef2f4d,0x160f2d40,0xe13efac3,0xc66ecdef,0xedd9d0ba,0x351414d7,0x34ac4076,0xfc041a67,
0xc742df13,0xc6c9bc09,0x1837e96d,0x4cf73ed3,0x20ce3fcd,0xdb8ffcab,0xb54ac1b4,0xe3b0bf74,
0x41051697,0x40f24fcc,0xfdcd2123,0xbe9fdc4e,0xb4b1acdd,0x16dddc54,0x5b9648e6,0x28f44c20,
0xdde301f5,0xac04bec6,0xd95eb2b4,0x4994147d,0x52a8604b,0x02f22d9e,0xbaa0dc01,0xa562a40f,
0x072dc8e1,0x681145e8,0x3c8a619c,0xdfe00ca9,0xa15abaa9,0xc06b9f77,0x42f3ff8e,0x67c26ac2,
0x11ff4335,0xbae7e2fd,0x99699e4b,0xf9c4b8fd,0x6ea341c9,0x46a06d8f,0xdf171111,0x9bcbb6c8,
0xba6098fc,0x45b8fc9a,0x713a7306,0x1062484d,0xb3fbdce0,0x960b98bb,0xfc93b897,0x72d24667,
0x47807010,0xdd1a1089,0x987ab39c,0xbb169706,0x4b290054,0x738477bc,0x0f4c4861,0xb0d1dae8,
0x930694db,0xff52b813,0x799a4c04,0x49dc7585,0xda4b0fd6,0x9277af0b,0xb8ae9169,0x4fa5023e,
0x76457c0b,0x0f5c49ba,0xad4fd932,0x90db90e7,0x0300b920,0x7c27501b,0x49b97645,0xd9320f5c,
0x90e7ad4f,0xb92290db,0x501a0300,0x76477c27,0x0f5a49b9,0xad4fd932,0x90da90e7,0x0300b922,
0x7c27501a,0x49ba7647,0xd9320f5a,0x90e7ad4f,0xb92090da,0x501b0300,0x76457c27,0x0f5c49ba,
0xad4fd932,0x90db90e7,0x0300b920,0x7c27501b,0x49b97645,0x00000f5c,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,
};

static const PROGMEM AudioSynthWavetable::sample_data Clarinet_samples[6] = {
	{
		(int16_t*)sample_0_Clarinet_SYNCL55, // sample
		true, // LOOP
		8, // LENGTH_BITS
		(1 << (32 - 8)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(55) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)226 - 1) << (32 - 8), // MAX_PHASE
		((uint32_t)225 - 1) << (32 - 8), // LOOP_PHASE_END
		(((uint32_t)225 - 1) << (32 - 8)) - (((uint32_t)113 - 1) << (32 - 8)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(21.30 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(3059.58 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(139.98 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(434.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.8 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(2) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-2)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_1_Clarinet_SYNCL64, // sample
		true, // LOOP
		8, // LENGTH_BITS
		(1 << (32 - 8)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(64) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)139 - 1) << (32 - 8), // MAX_PHASE
		((uint32_t)138 - 1) << (32 - 8), // LOOP_PHASE_END
		(((uint32_t)138 - 1) << (32 - 8)) - (((uint32_t)70 - 1) << (32 - 8)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(21.30 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(3059.58 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(139.98 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(434.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.8 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(2) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-2)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_2_Clarinet_SYNCL70, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(70) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)96 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)95 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)95 - 1) << (32 - 7)) - (((uint32_t)48 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(21.30 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(3059.58 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(139.98 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(434.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.8 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(2) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-2)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_3_Clarinet_SYNCL75, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(75) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)72 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)71 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)71 - 1) << (32 - 7)) - (((uint32_t)36 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(21.30 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(3059.58 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(139.98 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(434.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.8 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(2) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-2)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_4_Clarinet_SYNCL87, // sample
		true, // LOOP
		6, // LENGTH_BITS
		(1 << (32 - 6)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(87) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)57 - 1) << (32 - 6), // MAX_PHASE
		((uint32_t)56 - 1) << (32 - 6), // LOOP_PHASE_END
		(((uint32_t)56 - 1) << (32 - 6)) - (((uint32_t)38 - 1) << (32 - 6)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(21.30 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(3059.58 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(139.98 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(434.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.8 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(2) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-2)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_5_Clarinet_S_SAXA8, // sample
		true, // LOOP
		9, // LENGTH_BITS
		(1 << (32 - 9)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(95) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)411 - 1) << (32 - 9), // MAX_PHASE
		((uint32_t)410 - 1) << (32 - 9), // LOOP_PHASE_END
		(((uint32_t)410 - 1) << (32 - 9)) - (((uint32_t)366 - 1) << (32 - 9)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(21.30 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(3059.58 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(139.98 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(434.02 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.8 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(2) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-2)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const PROGMEM uint8_t Clarinet_ranges[] = {56, 70, 78, 85, 99, 127, };

const PROGMEM AudioSynthWavetable::instrument_data Clarinet = {6, Clarinet_ranges, Clarinet_samples };

